<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    <!-- 配置扫描@Service注解 -->
	<context:component-scan base-package="com.xcxy.*" />
  	<!-- 读取db.properties -->
	<context:property-placeholder location="classpath:db.properties" />
		<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>
	<!-- 配置 MyBatis的工厂 -->
		<bean class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 数据源 -->
			<property name="dataSource" ref="dataSource" />
			<!-- 配置MyBatis的核心配置文件所在位置 -->
			<property name="configLocation" value="classpath:mybatis-cfg.xml" />
			<!-- 配置*mapper.xml文件所在位置，不添加时默认与mapper.java接口位置一致 -->
			<property name="mapperLocations" value="classpath:com/xcxy/*/mapper/*.xml" />
			<!-- 分页插件 -->
			<!-- 注意其他配置 -->
			<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<!--使用下面的方式配置参数，一行配置一个 -->
						<value>
						params=value1
						<!-- 设置超出不能超出最后一页 -->
						reasonable=true
						</value>
					</property>
				</bean>
			</array>
			</property>
		</bean>
		<!-- 事务管理器 -->
		<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<!-- 数据源 -->
			<property name="dataSource" ref="dataSource" />
		</bean>
		<!-- 通知 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<!-- 传播行为 -->
		<tx:method name="save*" propagation="REQUIRED" />
		<tx:method name="insert*" propagation="REQUIRED" />
		<tx:method name="add*" propagation="REQUIRED" />
		<tx:method name="create*" propagation="REQUIRED" />
		<tx:method name="delete*" propagation="REQUIRED" />
		<tx:method name="update*" propagation="REQUIRED" />
		<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
		<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
		<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
		</tx:advice>
		<!-- 切面 -->
		<aop:config>
			<aop:advisor advice-ref="txAdvice"
				pointcut="execution(* com.xcxy.*.service.*.*(..))" />
		</aop:config>
		<aop:aspectj-autoproxy  proxy-target-class="true"/>
		<!-- 接口开发,扫描 com.xcxy.dao包 ，写在此包下的接口即可被扫描到 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.xcxy.*.dao" />
		</bean>
	<!--    文件上传解析器-->    
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
      <property name="defaultEncoding" value="utf-8"></property>    
      <property name="maxUploadSize" value="5242440"></property>    
	</bean>
	<!-- shiro配置 -->
	<bean id="myRealm" class="com.xcxy.shiro.realm.MyRealm"> <!-- 配置自定义类数据源 -->
	 	<property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"></property> <!-- 加密算法的名称 -->
                <property name="hashIterations" value="1024"></property> <!-- 配置加密的次数 -->
            </bean>
        </property>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm"></property>
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"></property>
	</bean>
	<!-- 配置核心过滤器 -->
	<bean id="shiroFilter" class="com.xcxy.shiro.factory.MyShiroFilterFactoryBean"><!-- 自定义继承ShiroFilterFactoryBean的类 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 除anon权限以外的所有没登陆的访问都到这 -->
		<property name="loginUrl" value="/system/gomain" />
		<!-- 登陆成功后显示的页面 -->
		<property name="successUrl" value="/system/main.jsp" />
		<!-- 登录后访问没有权限的页面后跳转的页面 -->
		<property name="unauthorizedUrl" value="/system/error" />
		<property name="filters">
	    	<map>
	    	    <entry key="roles" value-ref="roleOrFilter"/>
	    	</map>
	    </property>
	   	<property name="filterChainDefinitions">
			<value>
				/static/**=anon
				/static/images/**=anon
				/system/login=anon 		 <!-- anon表示匿名访问，就是不用登录 -->
				/system/gologin=anon
				<!-- 获取验证码 -->
				/system/getVerifyCode=anon 
				<!-- 招聘广告图片 -->
				/system/getImages=anon
				/system/getInfo=anon 
				<!-- 游客登录 -->
				/system/gomain=anon 	
				<!-- 简历投递 -->
				/system/gotoCV=anon
				/resume/addresume=anon   
				<!-- 注册里的验证方法都使其通过 -->
				/system/register=anon	
				/user/addUser=anon
				/practice/selectpracticeByNum=anon
				/worker/getBossList=anon
				/worker/getpeopleList=anon
				/user/userList=anon
				/practice/selectpracticeByNum=anon
				/worker/selectWorkerbywNum=anon
				<!-- 找回密码 -->
				/user/getPassword=anon
				/user/getNewPassword=anon
				<!-- 退出 -->
				/system/loginout=logout    <!-- logout表示退出登录，进入拦截页面 -->
				 <!-- anon表示匿名访问，就是不用登录 -->
				<!-- /**/*.do = authc --> 		<!-- authc表示要登录后，才能访问 -->
			</value>
		</property>
	</bean>
	<!-- 自定义的过滤器，用来判断当前用户是否是roleOrFilter["comm,test"]中的某个角色 -->
    <bean id="roleOrFilter" class="com.xcxy.shiro.util.UserRolesAuthorizationFilter" />
   </beans>